name: Publish YDB Hibernate Dialect

on:
  push:
    tags:
      - 'hibernate-ydb-dialect-v[0-9]+.[0-9]+.[0-9]+'

env:
  MAVEN_ARGS: --batch-mode --no-transfer-progress -Dstyle.color=always

jobs:
  validate:
    name: Validate YDB Hibernate Dialect
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Extract hibernate dialect version
        run: |
          cd hibernate-dialect
          HIBERNATE_DIALECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "HIBERNATE_DIALECT_VERSION=$HIBERNATE_DIALECT_VERSION" >> "$GITHUB_ENV"

      - name: Fail workflow if version is snapshot
        if: endsWith(env.HIBERNATE_DIALECT_VERSION, 'SNAPSHOT')
        uses: actions/github-script@v6
        with:
          script: core.setFailed('SNAPSHOT version can't be published')

      - name: Fail workflow if version is not equal to tag name
        if: format('v{0}', env.HIBERNATE_DIALECT_VERSION) != github.ref_name
        uses: actions/github-script@v6
        with:
          script: core.setFailed('Release name must be equal to project version')

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'

      - name: Download dependencies
        run: |
          cd hibernate-dialect
          mvn $MAVEN_ARGS dependency:go-offline

      - name: Build with Maven
        run: |
          cd hibernate-dialect
          mvn $MAVEN_ARGS package

  publish:
    name: Publish YDB Hibernate Dialect
    runs-on: ubuntu-latest
    needs: validate

    steps:
      - name: Install gpg secret key
        run: |
          # Install gpg secret key
          cat <(echo -e "${{ secrets.MAVEN_OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
          # Verify gpg secret key
          gpg --list-secret-keys --keyid-format LONG

      - uses: actions/checkout@v3

      - name: Set up Maven Central Repository
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'
          server-id: ossrh-s01
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Publish package
        run: |
          cd hibernate-dialect
          mvn $MAVEN_ARGS -Possrh-s01 -Dgpg.passphrase=${{ secrets.MAVEN_OSSRH_GPG_PASSWORD }} clean deploy
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_OSSRH_TOKEN }}
